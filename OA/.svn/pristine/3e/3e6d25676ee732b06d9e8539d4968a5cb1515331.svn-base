package com.oa.controller;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.UUID;

import javax.annotation.Resource;

import org.apache.commons.io.FileUtils;
import org.apache.struts2.ServletActionContext;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.google.gson.Gson;
import com.oa.entity.Result;
import com.oa.entity.UserApp;
import com.oa.entity.UserEntity;
import com.oa.service.UserService;
import com.opensymphony.xwork2.ActionSupport;

@Controller
@Scope("prototype")
public class UserController extends ActionSupport {
	private UserService service;

	@Resource(name = "userServiceImp")
	public void setService(UserService service) {
		this.service = service;
	}

	private UserEntity user;
	private File appphoto;
	private UserApp app;

	public UserApp getApp() {
		return app;
	}

	public void setApp(UserApp app) {
		this.app = app;
	}

	public UserEntity getUser() {
		return user;
	}

	public void setUser(UserEntity user) {
		this.user = user;
	}

	public String login() {
		return "login";

	}

	public File getAppphoto() {
		return appphoto;
	}

	public void setAppphoto(File appphoto) {
		this.appphoto = appphoto;
	}

	private String appphotoFileName;

	public String getAppphotoFileName() {
		return appphotoFileName;
	}

	public void setAppphotoFileName(String appphotoFileName) {
		this.appphotoFileName = appphotoFileName;
	}

	public String upDo() {
		try {
			UserEntity user = (UserEntity) ServletActionContext.getRequest().getSession().getAttribute("USER");

			System.out.println(user.getUid());
			String uuid = UUID.randomUUID().toString();
			appphotoFileName = appphotoFileName.substring(appphotoFileName.lastIndexOf("."));

			UserApp apps = new UserApp();
			apps.setAppimg("/OA/update/" + uuid + appphotoFileName);
			apps.setAppname(app.getAppname());
			apps.setAppurl(app.getAppurl());
			apps.setUid(user.getUid());
			apps.setApptime(new SimpleDateFormat("yyyy-MM-dd hh:mm:ss").format(Calendar.getInstance().getTime()));
			if (service.appinsert(apps)) {
				FileUtils.copyFile(appphoto, new File(ServletActionContext.getServletContext().getRealPath("/update") +"/"+ uuid + appphotoFileName));
                File file=new File("D://upDo");
                if(file.exists()) {
                	
                	file.mkdirs();
                }
                copyFile("D://apache-tomcat-8.5.20-windows-x64/apache-tomcat-8.5.20/webapps/OA/update"+uuid + appphotoFileName, "D://upDo"+uuid + appphotoFileName);
				return SUCCESS;

			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return SUCCESS;

	}

	public void messge() throws IOException {
		ServletActionContext.getResponse().setContentType("text/html;charset=utf-8");
		UserEntity user = (UserEntity) ServletActionContext.getRequest().getSession().getAttribute("USER");
		Result<UserEntity> result = new Result<>();
		Gson gson = new Gson();
		if (user != null) {
			result.setT(user);
			result.setFlag(true);
			result.setContent("获取成功");
			result.setList(service.appselect(user.getUid()));
		} else {
			result.setFlag(false);
			result.setContent("尴尬");
		}
		ServletActionContext.getResponse().getWriter().print(gson.toJson(result));
		index();
	}

	public String index() {
		if (ServletActionContext.getRequest().getSession().getAttribute("USER") != null) {
			user = (UserEntity) ServletActionContext.getRequest().getSession().getAttribute("USER");

			return SUCCESS;
		} else {
			return "login";
		}
	}

	public String clean() {
		ServletActionContext.getRequest().getSession().invalidate();

		return "login";

	}
    public void closeimg() throws IOException {
    	Result<UserApp> result=new Result<>();
    	Gson gson=new Gson();
    	String a=ServletActionContext.getRequest().getParameter("aid");
    	int b=Integer.parseInt(a);
    	if(service.closeimg(b)) {
    		result.setFlag(true);
    	}else {
    		result.setFlag(false);
    	}
    	ServletActionContext.getResponse().getWriter().print(gson.toJson(result));
    }
	public String loginDo() {
		UserEntity users = service.login(user.getUsername(), user.getPassword());
		if (users != null) {
			ServletActionContext.getRequest().getSession().setAttribute("USER", users);
			user = (UserEntity) ServletActionContext.getRequest().getSession().getAttribute("USER");

			return SUCCESS;
		}

		else {
			return "login";
		}

	}
	public static void copyFile(String from,String to) {
		InputStream in = null;
		OutputStream out = null;
		try {
			in = new FileInputStream(from);
			out = new FileOutputStream(to);
			byte[] bytes = new byte[1024*4];
			int len = 0;
			while((len = in.read(bytes)) != -1) {
				out.write(bytes, 0, len);
			}
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}finally {
			if(out != null) {
				try {
					out.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			if(in != null) {
				try {
					in.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
	}
}
