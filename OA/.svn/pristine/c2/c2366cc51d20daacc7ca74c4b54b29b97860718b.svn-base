package com.oa.dao.implments_achieve;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.orm.hibernate3.HibernateTemplate;
import org.springframework.stereotype.Repository;

import com.oa.dao.UserDao;
import com.oa.entity.PunchCard;
import com.oa.entity.UserApp;
import com.oa.entity.UserEntity;

@Repository
public class UserDaoImp implements UserDao {
	private HibernateTemplate hibernateTemplate;

	@Resource(name = "hibernateTemplate")
	public void setHibernateTemplate(HibernateTemplate hibernateTemplate) {
		this.hibernateTemplate = hibernateTemplate;
	}

	@SuppressWarnings("unchecked")
	@Override
	public UserEntity login(String username, String password) {
		/*
		 * System.out.println(
		 * "---------------------------------------------------------------------------------------------"
		 * );
		 */
		List<UserEntity> lists = hibernateTemplate.find("from UserEntity where username=? and password=?", username,
				password);
		return lists.size() > 0 ? lists.get(0) : null;
	}

	@Override
	public boolean logintime(String username) {
		boolean flag = hibernateTemplate.bulkUpdate("update UserEntity u set u.logintime=now() where u.username=?",
				username) > 0;
		return flag;
	}

	@Override
	public List<UserApp> appselect(String status) {
		System.out.println(status);
		List<UserApp> list = hibernateTemplate.find("from UserApp where status=? ",status);
		System.out.println(list.toString());
		return list;
	}

	@Override
	public boolean appinsert(UserApp app) {
		try {

			hibernateTemplate.save(app);

			return true;
		} catch (Exception e) {
			return false;
		}

	}

	@Override
	public boolean closeimg(int aid) {
		boolean flag = hibernateTemplate.bulkUpdate("delete UserApp where aid=?", aid) > 0;
		return flag;
	}

	@Override
	public boolean insertpunchcard(String a, String b, int uid) {
		PunchCard entity = new PunchCard();
		int h = Calendar.getInstance().get(Calendar.HOUR_OF_DAY);
		int m = Calendar.getInstance().get(Calendar.MINUTE);
		int s = Calendar.getInstance().get(Calendar.SECOND);
		String time = new SimpleDateFormat("HH:mm:ss").format(new Date());
	    if(h>6 && h<=9) {
	    	if(m<=0) {
	    		entity.setDown(0);
				entity.setUp(1);
				entity.setWait(0);
	    	}
	    }else if(h>9 && h<11) {
	    	
	    		entity.setDown(0);
				entity.setUp(0);
				entity.setWait(1);
	    	
	    }else {
	    	entity.setDown(1);
			entity.setUp(0);
			entity.setWait(0);
	    }
		int ab = Calendar.getInstance().get(Calendar.DAY_OF_MONTH);
		entity.setCardlocation(a);
		entity.setUid(uid);
		entity.setUptime(time);
		entity.setDays(ab);
		Double x = Double.parseDouble(b.substring(b.indexOf("-") + 1));
		Double y = Double.parseDouble(b.substring(0, b.indexOf("-") - 1));
		if (104 - y > 1 && 140 - y < -1) {
			return false;
		}
		try {
			hibernateTemplate.save(entity);
			return true;

		} catch (Exception e) {
			// TODO: handle exception
			return false;
		}
	}

	@Override
	public boolean dcardDo(int uid){
		int days = Calendar.getInstance().get(Calendar.DAY_OF_MONTH);
		List<PunchCard> cards = hibernateTemplate.find("from PunchCard where days=? and uid=?", days, uid);
		if (cards.size() > 0) {

			return false;
		}
		return true;
	}

	@Override
	public boolean reg(UserEntity user) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public List<UserApp> appall(int uid) {
           List<UserApp> list=hibernateTemplate.find("from UserApp where uid=?",uid);
		return list;
	}
}
